{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\FamalyTree\\\\famaly-tree\\\\src\\\\pages\\\\Tree.js\";\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport * as go from \"gojs\";\nimport { ReactDiagram } from \"gojs-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction initDiagram() {\n  const $ = go.GraphObject.make;\n  // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n  const diagram = $(go.Diagram, {\n    \"undoManager.isEnabled\": true,\n    // must be set to allow for model change listening\n    // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n    \"clickCreatingTool.archetypeNodeData\": {\n      text: \"new node\",\n      color: \"lightblue\"\n    },\n    model: new go.TreeModel({\n      linkKeyProperty: \"key\" // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n    })\n  });\n\n  // define a simple Node template\n  diagram.nodeTemplate = $(go.Node, \"Auto\",\n  // the Shape will go around the TextBlock\n  new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), $(go.Shape, \"RoundedRectangle\", {\n    name: \"SHAPE\",\n    fill: \"white\",\n    strokeWidth: 0\n  },\n  // Shape.fill is bound to Node.data.color\n  new go.Binding(\"fill\", \"color\")), $(go.TextBlock, {\n    margin: 8,\n    editable: true\n  },\n  // some room around the text\n  new go.Binding(\"text\").makeTwoWay()));\n  return diagram;\n}\n\n/**\r\n * This function handles any changes to the GoJS model.\r\n * It is here that you would make any updates to your React state, which is discussed below.\r\n */\nfunction handleModelChange(changes) {\n  //alert(\"GoJS model changed!\");\n}\nconst Tree = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactDiagram, {\n      initDiagram: initDiagram,\n      divClassName: \"diagram-component\",\n      nodeDataArray: [{\n        key: 0,\n        text: \"Alpha\",\n        color: \"lightblue\",\n        loc: \"0 0\"\n      }, {\n        key: 1,\n        text: \"Beta\",\n        color: \"orange\",\n        loc: \"150 0\"\n      }, {\n        key: 2,\n        text: \"Gamma\",\n        color: \"lightgreen\",\n        loc: \"0 150\"\n      }, {\n        key: 3,\n        text: \"Delta\",\n        color: \"pink\",\n        loc: \"150 150\"\n      }],\n      linkDataArray: [{\n        key: -1,\n        from: 0,\n        to: 1\n      }, {\n        key: -2,\n        from: 0,\n        to: 2\n      }, {\n        key: -3,\n        from: 1,\n        to: 1\n      }, {\n        key: -4,\n        from: 2,\n        to: 3\n      }, {\n        key: -5,\n        from: 3,\n        to: 0\n      }],\n      onModelChange: handleModelChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","Container","go","ReactDiagram","jsxDEV","_jsxDEV","initDiagram","$","GraphObject","make","diagram","Diagram","text","color","model","TreeModel","linkKeyProperty","nodeTemplate","Node","Binding","Point","parse","makeTwoWay","stringify","Shape","name","fill","strokeWidth","TextBlock","margin","editable","handleModelChange","changes","Tree","children","divClassName","nodeDataArray","key","loc","linkDataArray","from","to","onModelChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Рабочий стол/FamalyTree/famaly-tree/src/pages/Tree.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport * as go from \"gojs\";\r\nimport { ReactDiagram } from \"gojs-react\";\r\n\r\nfunction initDiagram() {\r\n  const $ = go.GraphObject.make;\r\n  // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\r\n  const diagram = $(go.Diagram, {\r\n    \"undoManager.isEnabled\": true, // must be set to allow for model change listening\r\n    // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\r\n    \"clickCreatingTool.archetypeNodeData\": {\r\n      text: \"new node\",\r\n      color: \"lightblue\",\r\n    },\r\n    model: new go.TreeModel({\r\n      linkKeyProperty: \"key\", // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\r\n    }),\r\n  });\r\n\r\n  // define a simple Node template\r\n  diagram.nodeTemplate = $(\r\n    go.Node,\r\n    \"Auto\", // the Shape will go around the TextBlock\r\n    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n      go.Point.stringify\r\n    ),\r\n    $(\r\n      go.Shape,\r\n      \"RoundedRectangle\",\r\n      { name: \"SHAPE\", fill: \"white\", strokeWidth: 0 },\r\n      // Shape.fill is bound to Node.data.color\r\n      new go.Binding(\"fill\", \"color\")\r\n    ),\r\n    $(\r\n      go.TextBlock,\r\n      { margin: 8, editable: true }, // some room around the text\r\n      new go.Binding(\"text\").makeTwoWay()\r\n    )\r\n  );\r\n\r\n  return diagram;\r\n}\r\n\r\n/**\r\n * This function handles any changes to the GoJS model.\r\n * It is here that you would make any updates to your React state, which is discussed below.\r\n */\r\nfunction handleModelChange(changes) {\r\n  //alert(\"GoJS model changed!\");\r\n}\r\n\r\nconst Tree = () => {\r\n  return (\r\n    <div>\r\n      <ReactDiagram\r\n        initDiagram={initDiagram}\r\n        divClassName=\"diagram-component\"\r\n        nodeDataArray={[\r\n          { key: 0, text: \"Alpha\", color: \"lightblue\", loc: \"0 0\" },\r\n          { key: 1, text: \"Beta\", color: \"orange\", loc: \"150 0\" },\r\n          { key: 2, text: \"Gamma\", color: \"lightgreen\", loc: \"0 150\" },\r\n          { key: 3, text: \"Delta\", color: \"pink\", loc: \"150 150\" },\r\n        ]}\r\n        linkDataArray={[\r\n          { key: -1, from: 0, to: 1 },\r\n          { key: -2, from: 0, to: 2 },\r\n          { key: -3, from: 1, to: 1 },\r\n          { key: -4, from: 2, to: 3 },\r\n          { key: -5, from: 3, to: 0 },\r\n        ]}\r\n        onModelChange={handleModelChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}