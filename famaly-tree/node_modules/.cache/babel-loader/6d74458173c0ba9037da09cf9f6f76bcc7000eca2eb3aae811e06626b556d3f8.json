{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\FamalyTree\\\\famaly-tree\\\\src\\\\pages\\\\Tree.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport * as go from \"gojs\";\nimport { ReactDiagram } from \"gojs-react\";\nimport { Context } from \"..\";\nimport { PERSONE_ROUTE, REACT_APP_API_URL } from \"../utils/consts\";\nimport { fetchPersones } from \"../http/personeAPI\";\nimport { checkId } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = () => {\n  _s();\n  const {\n    persone,\n    user\n  } = useContext(Context);\n  useEffect(() => {\n    fetchPersones().then(data => persone.setPersones(data.rows));\n  });\n  console.log(\"eff\");\n  let branchs = [];\n  let link = [];\n  //const history = useNavigate;\n\n  const createBranches = persones => {\n    for (let i = 0; i < persones.length; i++) {\n      const persone = persones[i];\n      let color = \"#a1a7cc\";\n      if (persone.gender === \"women\") {\n        color = \"#cca1a1\";\n      }\n      branchs[i] = {\n        key: persone.id,\n        lastname: persone.lastname,\n        firstname: persone.firstname,\n        surname: persone.surname,\n        img: \"1829050.png\",\n        //REACT_APP_API_URL + persone.img,\n        color: color\n      };\n      link[i] = {\n        key: -i++,\n        from: persone.id,\n        to: persone.parent\n      };\n      console.log(link[i]);\n    }\n  };\n  const textStyle = {\n    margin: new go.Margin(2, 10, 0, 0),\n    stroke: \"white\"\n  };\n  function initDiagram() {\n    const $ = go.GraphObject.make;\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n    const diagram = $(go.Diagram, {\n      \"undoManager.isEnabled\": true,\n      // must be set to allow for model change listening\n      layout: new go.TreeLayout({\n        angle: 90,\n        layerSpacing: 35\n      }),\n      // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n      //\"clickCreatingTool.archetypeNodeData\": {\n      // firstname: \"new persone\",\n      // color: \"#a1a7cc\",\n      //},\n      model: new go.TreeModel({\n        linkKeyProperty: \"key\" // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n      })\n    });\n\n    // define a simple Node template\n    diagram.nodeTemplate = $(go.Node, \"Auto\",\n    // the Shape will go around the TextBlock\n    {\n      // here the second argument is this object, which is this Node\n      doubleClick: (e, node) => {\n        window.open(\"..\" + PERSONE_ROUTE + \"/\" + node.key);\n      }\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), $(go.Shape, \"RoundedRectangle\", {\n      name: \"SHAPE\",\n      fill: \"#ccc\",\n      strokeWidth: 0\n    }, new go.Binding(\"fill\", \"color\")), $(go.Panel, \"Horizontal\", $(go.Picture, {\n      //source: \"1829050.png\",\n      margin: 10,\n      width: 50,\n      height: 50,\n      background: \"white\"\n    }, new go.Binding(\"sourse\", \"img\")), $(go.Panel, \"Vertical\", $(go.TextBlock, textStyle,\n    // some room around the text\n    new go.Binding(\"text\", \"lastname\").makeTwoWay()), $(go.TextBlock, textStyle,\n    // some room around the text\n    new go.Binding(\"text\", \"firstname\").makeTwoWay()), $(go.TextBlock, textStyle,\n    // some room around the text\n    new go.Binding(\"text\", \"surname\").makeTwoWay()))));\n    if (checkId() === user.user.id) {\n      console.log(\"fdgfdsg\");\n      diagram.nodeTemplate.contextMenu = $(\"ContextMenu\", $(\"ContextMenuButton\", $(go.TextBlock, \"Добавить Родственика\"), {\n        click: (e, button) => {\n          const node = button.part.adornedPart;\n          if (node !== null) {\n            const thisemp = node.data;\n            diagram.startTransaction(\"add employee\");\n            const newemp = {\n              firstname: \"Родственник\",\n              parent: thisemp.key\n            };\n            diagram.model.addNodeData(newemp);\n            const newnode = diagram.findNodeForData(newemp);\n            if (newnode) newnode.location = node.location;\n            diagram.commitTransaction(\"add employee\");\n          }\n        }\n      }), $(\"ContextMenuButton\", $(go.TextBlock, \"Удалить Родственника\"), {\n        click: (e, button) => {\n          // reparent the subtree to this node's boss, then remove the node\n          const node = button.part.adornedPart;\n          if (node !== null) {\n            diagram.startTransaction(\"reparent remove\");\n            const chl = node.findTreeChildrenNodes();\n            // iterate through the children and set their parent key to our selected node's parent key\n            while (chl.next()) {\n              const emp = chl.value;\n              diagram.model.setParentKeyForNodeData(emp.data, node.findTreeParentNode().data.key);\n            }\n            // and now remove the selected node itself\n            diagram.model.removeNodeData(node.data);\n            diagram.commitTransaction(\"reparent remove\");\n          }\n        }\n      }), $(\"ContextMenuButton\", $(go.TextBlock, \"Удалить Родственника и Цепь\"), {\n        click: (e, button) => {\n          // remove the whole subtree, including the node itself\n          const node = button.part.adornedPart;\n          if (node !== null) {\n            diagram.startTransaction(\"remove dept\");\n            diagram.removeParts(node.findTreeParts());\n            diagram.commitTransaction(\"remove dept\");\n          }\n        }\n      }));\n    }\n    diagram.linkTemplate = $(go.Link, {\n      routing: go.Link.Orthogonal,\n      corner: 5\n    }, new go.Shape({\n      strokeWidth: 3,\n      stroke: \"#ccc\"\n    }));\n    return diagram;\n  }\n\n  /**\r\n   * This function handles any changes to the GoJS model.\r\n   * It is here that you would make any updates to your React state, which is discussed below.\r\n   */\n  function handleModelChange(changes) {\n    // console.log(changes);\n  }\n  createBranches(persone.persones);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactDiagram, {\n      initDiagram: initDiagram,\n      divClassName: \"diagram-component\",\n      nodeDataArray: branchs,\n      onModelChange: handleModelChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"pTc+3kfmenSL6Xdz7mM2nMHV7c0=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useContext","useEffect","go","ReactDiagram","Context","PERSONE_ROUTE","REACT_APP_API_URL","fetchPersones","checkId","jsxDEV","_jsxDEV","Tree","_s","persone","user","then","data","setPersones","rows","console","log","branchs","link","createBranches","persones","i","length","color","gender","key","id","lastname","firstname","surname","img","from","to","parent","textStyle","margin","Margin","stroke","initDiagram","$","GraphObject","make","diagram","Diagram","layout","TreeLayout","angle","layerSpacing","model","TreeModel","linkKeyProperty","nodeTemplate","Node","doubleClick","e","node","window","open","Binding","Point","parse","makeTwoWay","stringify","Shape","name","fill","strokeWidth","Panel","Picture","width","height","background","TextBlock","contextMenu","click","button","part","adornedPart","thisemp","startTransaction","newemp","addNodeData","newnode","findNodeForData","location","commitTransaction","chl","findTreeChildrenNodes","next","emp","value","setParentKeyForNodeData","findTreeParentNode","removeNodeData","removeParts","findTreeParts","linkTemplate","Link","routing","Orthogonal","corner","handleModelChange","changes","children","divClassName","nodeDataArray","onModelChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Рабочий стол/FamalyTree/famaly-tree/src/pages/Tree.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport * as go from \"gojs\";\r\nimport { ReactDiagram } from \"gojs-react\";\r\nimport { Context } from \"..\";\r\nimport { PERSONE_ROUTE, REACT_APP_API_URL } from \"../utils/consts\";\r\nimport { fetchPersones } from \"../http/personeAPI\";\r\nimport { checkId } from \"../routes\";\r\n\r\nconst Tree = () => {\r\n  const { persone, user } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    fetchPersones().then((data) => persone.setPersones(data.rows));\r\n  });\r\n  console.log(\"eff\");\r\n\r\n  let branchs = [];\r\n\r\n  let link = [];\r\n  //const history = useNavigate;\r\n\r\n  const createBranches = (persones) => {\r\n    for (let i = 0; i < persones.length; i++) {\r\n      const persone = persones[i];\r\n      let color = \"#a1a7cc\";\r\n      if (persone.gender === \"women\") {\r\n        color = \"#cca1a1\";\r\n      }\r\n      branchs[i] = {\r\n        key: persone.id,\r\n        lastname: persone.lastname,\r\n        firstname: persone.firstname,\r\n        surname: persone.surname,\r\n        img: \"1829050.png\", //REACT_APP_API_URL + persone.img,\r\n        color: color,\r\n      };\r\n      link[i] = {\r\n        key: -i++,\r\n        from: persone.id,\r\n        to: persone.parent,\r\n      };\r\n      console.log(link[i]);\r\n    }\r\n  };\r\n\r\n  const textStyle = { margin: new go.Margin(2, 10, 0, 0), stroke: \"white\" };\r\n\r\n  function initDiagram() {\r\n    const $ = go.GraphObject.make;\r\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\r\n    const diagram = $(go.Diagram, {\r\n      \"undoManager.isEnabled\": true, // must be set to allow for model change listening\r\n      layout: new go.TreeLayout({ angle: 90, layerSpacing: 35 }), // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\r\n      //\"clickCreatingTool.archetypeNodeData\": {\r\n      // firstname: \"new persone\",\r\n      // color: \"#a1a7cc\",\r\n      //},\r\n      model: new go.TreeModel({\r\n        linkKeyProperty: \"key\", // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\r\n      }),\r\n    });\r\n\r\n    // define a simple Node template\r\n    diagram.nodeTemplate = $(\r\n      go.Node,\r\n      \"Auto\", // the Shape will go around the TextBlock\r\n      {\r\n        // here the second argument is this object, which is this Node\r\n        doubleClick: (e, node) => {\r\n          window.open(\"..\" + PERSONE_ROUTE + \"/\" + node.key);\r\n        },\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      $(\r\n        go.Shape,\r\n        \"RoundedRectangle\",\r\n        {\r\n          name: \"SHAPE\",\r\n          fill: \"#ccc\",\r\n          strokeWidth: 0,\r\n        },\r\n        new go.Binding(\"fill\", \"color\")\r\n      ),\r\n      $(\r\n        go.Panel,\r\n        \"Horizontal\",\r\n        $(\r\n          go.Picture,\r\n          {\r\n            //source: \"1829050.png\",\r\n            margin: 10,\r\n            width: 50,\r\n            height: 50,\r\n            background: \"white\",\r\n          },\r\n          new go.Binding(\"sourse\", \"img\")\r\n        ),\r\n        $(\r\n          go.Panel,\r\n          \"Vertical\",\r\n          $(\r\n            go.TextBlock,\r\n            textStyle, // some room around the text\r\n            new go.Binding(\"text\", \"lastname\").makeTwoWay()\r\n          ),\r\n          $(\r\n            go.TextBlock,\r\n            textStyle, // some room around the text\r\n            new go.Binding(\"text\", \"firstname\").makeTwoWay()\r\n          ),\r\n          $(\r\n            go.TextBlock,\r\n            textStyle, // some room around the text\r\n            new go.Binding(\"text\", \"surname\").makeTwoWay()\r\n          )\r\n        )\r\n      )\r\n    );\r\n\r\n    if (checkId() === user.user.id) {\r\n      console.log(\"fdgfdsg\");\r\n      diagram.nodeTemplate.contextMenu = $(\r\n        \"ContextMenu\",\r\n        $(\"ContextMenuButton\", $(go.TextBlock, \"Добавить Родственика\"), {\r\n          click: (e, button) => {\r\n            const node = button.part.adornedPart;\r\n            if (node !== null) {\r\n              const thisemp = node.data;\r\n              diagram.startTransaction(\"add employee\");\r\n              const newemp = {\r\n                firstname: \"Родственник\",\r\n                parent: thisemp.key,\r\n              };\r\n              diagram.model.addNodeData(newemp);\r\n              const newnode = diagram.findNodeForData(newemp);\r\n              if (newnode) newnode.location = node.location;\r\n              diagram.commitTransaction(\"add employee\");\r\n            }\r\n          },\r\n        }),\r\n        $(\"ContextMenuButton\", $(go.TextBlock, \"Удалить Родственника\"), {\r\n          click: (e, button) => {\r\n            // reparent the subtree to this node's boss, then remove the node\r\n            const node = button.part.adornedPart;\r\n            if (node !== null) {\r\n              diagram.startTransaction(\"reparent remove\");\r\n              const chl = node.findTreeChildrenNodes();\r\n              // iterate through the children and set their parent key to our selected node's parent key\r\n              while (chl.next()) {\r\n                const emp = chl.value;\r\n                diagram.model.setParentKeyForNodeData(\r\n                  emp.data,\r\n                  node.findTreeParentNode().data.key\r\n                );\r\n              }\r\n              // and now remove the selected node itself\r\n              diagram.model.removeNodeData(node.data);\r\n              diagram.commitTransaction(\"reparent remove\");\r\n            }\r\n          },\r\n        }),\r\n        $(\"ContextMenuButton\", $(go.TextBlock, \"Удалить Родственника и Цепь\"), {\r\n          click: (e, button) => {\r\n            // remove the whole subtree, including the node itself\r\n            const node = button.part.adornedPart;\r\n            if (node !== null) {\r\n              diagram.startTransaction(\"remove dept\");\r\n              diagram.removeParts(node.findTreeParts());\r\n              diagram.commitTransaction(\"remove dept\");\r\n            }\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    diagram.linkTemplate = $(\r\n      go.Link,\r\n      { routing: go.Link.Orthogonal, corner: 5 },\r\n      new go.Shape({ strokeWidth: 3, stroke: \"#ccc\" })\r\n    );\r\n\r\n    return diagram;\r\n  }\r\n\r\n  /**\r\n   * This function handles any changes to the GoJS model.\r\n   * It is here that you would make any updates to your React state, which is discussed below.\r\n   */\r\n  function handleModelChange(changes) {\r\n    // console.log(changes);\r\n  }\r\n\r\n  createBranches(persone.persones);\r\n  return (\r\n    <div>\r\n      <ReactDiagram\r\n        initDiagram={initDiagram}\r\n        divClassName=\"diagram-component\"\r\n        nodeDataArray={branchs}\r\n        onModelChange={handleModelChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}